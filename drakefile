import drake
import drake.cxx

pjdfstest = None
tests_folder = None

def configure(
    cxx_toolkit = None,
    cxx_config = drake.cxx.Config(),
):
  global pjdfstest, tests_folder
  cxx_config = drake.cxx.Config(cxx_config)
  cxx_config.define('_GNU_SOURCE')
  sources = drake.nodes('pjdfstest.c')

  pjdfstest = drake.cxx.Executable(
    'pjdfstest',
    sources,
    cxx_toolkit,
    cxx_config)

  tests = drake.nodes(
    'tests/chflags/00.t',
    'tests/chflags/01.t',
    'tests/chflags/02.t',
    'tests/chflags/03.t',
    'tests/chflags/04.t',
    'tests/chflags/05.t',
    'tests/chflags/06.t',
    'tests/chflags/07.t',
    'tests/chflags/08.t',
    'tests/chflags/09.t',
    'tests/chflags/10.t',
    'tests/chflags/11.t',
    'tests/chflags/12.t',
    'tests/chflags/13.t',
    'tests/ftruncate/00.t',
    'tests/ftruncate/09.t',
    'tests/ftruncate/13.t',
    'tests/granular/00.t',
    'tests/granular/01.t',
    'tests/granular/02.t',
    'tests/granular/03.t',
    'tests/granular/04.t',
    'tests/granular/05.t',
    'tests/link/00.t',
    'tests/link/01.t',
    'tests/link/02.t',
    'tests/link/03.t',
    'tests/link/04.t',
    'tests/link/05.t',
    'tests/link/08.t',
    'tests/link/09.t',
    'tests/link/10.t',
    'tests/link/12.t',
    'tests/link/13.t',
    'tests/link/14.t',
    'tests/link/15.t',
    'tests/link/16.t',
    'tests/link/17.t',
    'tests/mkdir/00.t',
    'tests/mkdir/01.t',
    'tests/mkdir/02.t',
    'tests/mkdir/03.t',
    'tests/mkdir/04.t',
    'tests/mkdir/05.t',
    'tests/mkdir/06.t',
    'tests/mkdir/07.t',
    'tests/mkdir/08.t',
    'tests/mkdir/09.t',
    'tests/mkdir/10.t',
    'tests/mkdir/11.t',
    'tests/mkdir/12.t',
    'tests/open/00.t',
    'tests/open/01.t',
    'tests/open/02.t',
    'tests/open/03.t',
    'tests/open/04.t',
    'tests/open/05.t',
    'tests/open/06.t',
    'tests/open/07.t',
    'tests/open/08.t',
    'tests/open/09.t',
    'tests/open/10.t',
    'tests/open/11.t',
    'tests/open/12.t',
    'tests/open/13.t',
    'tests/open/14.t',
    'tests/open/15.t',
    'tests/open/16.t',
    'tests/open/17.t',
    'tests/open/18.t',
    'tests/open/19.t',
    'tests/open/20.t',
    'tests/open/21.t',
    'tests/open/22.t',
    'tests/open/23.t',
    'tests/open/24.t',
    'tests/posix_fallocate/00.t',
    'tests/rename/00.t',
    'tests/rename/01.t',
    'tests/rename/02.t',
    'tests/rename/03.t',
    'tests/rename/06.t',
    'tests/rename/07.t',
    'tests/rename/08.t',
    'tests/rename/11.t',
    'tests/rename/12.t',
    'tests/rename/13.t',
    'tests/rename/14.t',
    'tests/rename/15.t',
    'tests/rename/16.t',
    'tests/rename/17.t',
    'tests/rename/18.t',
    'tests/rename/19.t',
    'tests/rename/20.t',
    'tests/rmdir/00.t',
    'tests/rmdir/01.t',
    'tests/rmdir/02.t',
    'tests/rmdir/03.t',
    'tests/rmdir/04.t',
    'tests/rmdir/05.t',
    'tests/rmdir/06.t',
    'tests/rmdir/09.t',
    'tests/rmdir/10.t',
    'tests/rmdir/12.t',
    'tests/rmdir/13.t',
    'tests/rmdir/14.t',
    'tests/rmdir/15.t',
    'tests/symlink/00.t',
    'tests/symlink/01.t',
    'tests/symlink/02.t',
    'tests/symlink/03.t',
    'tests/symlink/04.t',
    'tests/symlink/07.t',
    'tests/symlink/08.t',
    'tests/symlink/09.t',
    'tests/symlink/10.t',
    'tests/symlink/11.t',
    'tests/symlink/12.t',
    'tests/truncate/00.t',
    'tests/truncate/01.t',
    'tests/truncate/02.t',
    'tests/truncate/03.t',
    'tests/truncate/04.t',
    'tests/truncate/05.t',
    'tests/truncate/06.t',
    'tests/truncate/07.t',
    'tests/truncate/08.t',
    'tests/truncate/09.t',
    'tests/truncate/10.t',
    'tests/truncate/11.t',
    'tests/truncate/12.t',
    'tests/truncate/13.t',
    'tests/truncate/14.t',
    'tests/unlink/00.t',
    'tests/unlink/01.t',
    'tests/unlink/02.t',
    'tests/unlink/03.t',
    'tests/unlink/04.t',
    'tests/unlink/07.t',
    'tests/unlink/08.t',
    'tests/unlink/09.t',
    'tests/unlink/10.t',
    'tests/unlink/12.t',
    'tests/unlink/13.t',
  )

  import inspect
  import os
  tests_folder = drake.Path(
    os.path.dirname(
      os.path.abspath(
        inspect.getfile(
          inspect.currentframe())))
  ) / tests[0].path().dirname().dirname()
